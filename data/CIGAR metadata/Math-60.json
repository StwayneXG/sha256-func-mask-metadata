{
    "bug_id": 60,
    "bug_type": "SF",
    "buggy_lines": "        try {\n        } catch (MaxIterationsExceededException ex) {\n            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                return 0;\n            } else if (x > (mean + 20 * standardDeviation)) {\n                return 1;\n            } else {\n                throw ex;\n            }\n        }",
    "code": "    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        try {\n        return 0.5 * (1.0 + Erf.erf((dev) /\n                    (standardDeviation * FastMath.sqrt(2.0))));\n        } catch (MaxIterationsExceededException ex) {\n            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                return 0;\n            } else if (x > (mean + 20 * standardDeviation)) {\n                return 1;\n            } else {\n                throw ex;\n            }\n        }\n    }",
    "fixed_code": "    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        if (FastMath.abs(dev) > 40 * standardDeviation) { \n            return dev < 0 ? 0.0d : 1.0d;\n        }\n        return 0.5 * (1.0 + Erf.erf((dev) /\n                    (standardDeviation * FastMath.sqrt(2.0))));\n    }",
    "fixed_lines": "        if (FastMath.abs(dev) > 40 * standardDeviation) { \n            return dev < 0 ? 0.0d : 1.0d;\n        }",
    "masked_code": "    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        return 0.5 * (1.0 + Erf.erf((dev) /\n                    (standardDeviation * FastMath.sqrt(2.0))));\n>>> [ INFILL ] <<<\n    }",
    "project": "Math",
    "test_error_message": "org.apache.commons.math.ConvergenceException: Continued fraction diverged to NaN for value \u221e",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(distribution.cumulativeProbability(Double.MAX_VALUE), 1, 0);",
    "test_name": "testExtremeValues",
    "test_suite": "org.apache.commons.math.distribution.NormalDistributionTest",
    "time_buggy": "2010-11-29 01:43:12 +0000",
    "time_fixed": "2010-11-30 11:55:22 +0000"
}