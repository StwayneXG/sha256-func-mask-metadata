{
    "bug_id": 87,
    "bug_type": "SF",
    "buggy_lines": "            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n                if (row == null) {\n                } else {\n                }",
    "code": "    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n                if (row == null) {\n                row = i;\n                } else {\n                return null;\n                }\n            }\n        }\n        return row;\n    }",
    "fixed_code": "    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {\n                row = i;\n            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n                return null;\n            }\n        }\n        return row;\n    }",
    "fixed_lines": "            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {\n            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {",
    "masked_code": "    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n                row = i;\n                return null;\n>>> [ INFILL ] <<<\n            }\n        }\n        return row;\n    }",
    "project": "Math",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<10.0> but was:<0.0>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(10.0, solution.getPoint()[0], 0.0);",
    "test_name": "testSingleVariableAndConstraint",
    "test_suite": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
    "time_buggy": "2009-06-02 21:02:14 +0000",
    "time_fixed": "2009-06-03 09:06:08 +0000"
}