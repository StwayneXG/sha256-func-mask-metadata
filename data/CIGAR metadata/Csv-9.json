{
    "bug_id": 9,
    "bug_type": "SH SF",
    "buggy_lines": "",
    "code": "    public Iterator<String> iterator() {\n        return toList().iterator();\n    }\n\n    /**\n     * Puts all values of this record into the given Map.\n     *\n     * @param map The Map to populate.\n     * @return the given map.\n     */\n    <M extends Map<String, String>> M putIn(final M map) {\n        for (final Entry<String, Integer> entry : mapping.entrySet()) {\n            final int col = entry.getValue().intValue();\n            if (col < values.length) {\n                map.put(entry.getKey(), values[col]);\n            }\n        }\n        return map;\n    }",
    "fixed_code": "    public Iterator<String> iterator() {\n        return toList().iterator();\n    }\n\n    /**\n     * Puts all values of this record into the given Map.\n     *\n     * @param map The Map to populate.\n     * @return the given map.\n     */\n    <M extends Map<String, String>> M putIn(final M map) {\n        if (mapping == null) {\n            return map;\n        }\n        for (final Entry<String, Integer> entry : mapping.entrySet()) {\n            final int col = entry.getValue().intValue();\n            if (col < values.length) {\n                map.put(entry.getKey(), values[col]);\n            }\n        }\n        return map;\n    }",
    "fixed_lines": "        if (mapping == null) {\n            return map;\n        }",
    "masked_code": "    public Iterator<String> iterator() {\n        return toList().iterator();\n    }\n\n    /**\n     * Puts all values of this record into the given Map.\n     *\n     * @param map The Map to populate.\n     * @return the given map.\n     */\n    <M extends Map<String, String>> M putIn(final M map) {\n>>> [ INFILL ] <<<\n        for (final Entry<String, Integer> entry : mapping.entrySet()) {\n            final int col = entry.getValue().intValue();\n            if (col < values.length) {\n                map.put(entry.getKey(), values[col]);\n            }\n        }\n        return map;\n    }",
    "project": "Csv",
    "test_error_message": "java.lang.NullPointerException",
    "test_framework": "defects4j",
    "test_line": "       Map<String, String> map = shortRec.toMap();",
    "test_name": "testToMapWithNoHeader",
    "test_suite": "org.apache.commons.csv.CSVRecordTest",
    "time_buggy": "2014-05-15 16:24:56 +0000",
    "time_fixed": "2014-05-15 16:26:26 +0000"
}