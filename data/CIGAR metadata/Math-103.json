{
    "bug_id": 103,
    "bug_type": "SF",
    "buggy_lines": "",
    "code": "    public double cumulativeProbability(double x) throws MathException {\n            return 0.5 * (1.0 + Erf.erf((x - mean) /\n                    (standardDeviation * Math.sqrt(2.0))));\n    }",
    "fixed_code": "    public double cumulativeProbability(double x) throws MathException {\n        try {\n            return 0.5 * (1.0 + Erf.erf((x - mean) /\n                    (standardDeviation * Math.sqrt(2.0))));\n        } catch (MaxIterationsExceededException ex) {\n            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                return 0.0d;\n            } else if (x > (mean + 20 * standardDeviation)) {\n                return 1.0d;\n            } else {\n                throw ex;\n            }\n        }\n    }",
    "fixed_lines": "        try {\n        } catch (MaxIterationsExceededException ex) {\n            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                return 0.0d;\n            } else if (x > (mean + 20 * standardDeviation)) {\n                return 1.0d;\n            } else {\n                throw ex;\n            }\n        }",
    "masked_code": "    public double cumulativeProbability(double x) throws MathException {\n            return 0.5 * (1.0 + Erf.erf((x - mean) /\n                    (standardDeviation * Math.sqrt(2.0))));\n>>> [ INFILL ] <<<\n    }",
    "project": "Math",
    "test_error_message": "org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (10,000) exceeded",
    "test_framework": "defects4j",
    "test_line": "            double lowerTail = distribution.cumulativeProbability((double)-i);",
    "test_name": "testExtremeValues",
    "test_suite": "org.apache.commons.math.distribution.NormalDistributionTest",
    "time_buggy": "2007-07-16 01:21:45 +0000",
    "time_fixed": "2007-07-22 02:33:08 +0000"
}