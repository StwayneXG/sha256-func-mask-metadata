{
    "bug_id": 80,
    "bug_type": "SF",
    "buggy_lines": "",
    "code": "    void insert(Token.Comment commentToken) {\n        Comment comment = new Comment(commentToken.getData());\n        Node insert = comment;\n        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n            // so we do a bit of a hack and parse the data as an element to pull the attributes out\n            String data = comment.getData();\n            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n                Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri, Parser.xmlParser());\n                    Element el = doc.child(0);\n                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                    insert.attributes().addAll(el.attributes());\n            }\n        }\n        insertNode(insert);\n    }",
    "fixed_code": "    void insert(Token.Comment commentToken) {\n        Comment comment = new Comment(commentToken.getData());\n        Node insert = comment;\n        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n            // so we do a bit of a hack and parse the data as an element to pull the attributes out\n            String data = comment.getData();\n            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n                Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri, Parser.xmlParser());\n                if (doc.childNodeSize() > 0) {\n                    Element el = doc.child(0);\n                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                    insert.attributes().addAll(el.attributes());\n                } // else, we couldn't parse it as a decl, so leave as a comment\n            }\n        }\n        insertNode(insert);\n    }",
    "fixed_lines": "                if (doc.childNodeSize() > 0) {\n                } // else, we couldn't parse it as a decl, so leave as a comment",
    "masked_code": "    void insert(Token.Comment commentToken) {\n        Comment comment = new Comment(commentToken.getData());\n        Node insert = comment;\n        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n            // so we do a bit of a hack and parse the data as an element to pull the attributes out\n            String data = comment.getData();\n            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n                Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri, Parser.xmlParser());\n                    Element el = doc.child(0);\n                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                    insert.attributes().addAll(el.attributes());\n>>> [ INFILL ] <<<\n            }\n        }\n        insertNode(insert);\n    }",
    "project": "Jsoup",
    "test_error_message": "java.lang.IndexOutOfBoundsException: Index: 0, Size: 0",
    "test_framework": "defects4j",
    "test_line": "        Document doc = Jsoup.parse(xml, \"\", Parser.xmlParser());",
    "test_name": "handlesDodgyXmlDecl",
    "test_suite": "org.jsoup.parser.XmlTreeBuilderTest",
    "time_buggy": "2018-04-15 13:53:55 -0700",
    "time_fixed": "2018-04-15 14:09:14 -0700"
}