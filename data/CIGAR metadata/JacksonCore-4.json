{
    "bug_id": 4,
    "bug_type": "SF",
    "buggy_lines": "        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));",
    "code": "    public char[] expandCurrentSegment()\n    {\n        final char[] curr = _currentSegment;\n        // Let's grow by 50% by default\n        final int len = curr.length;\n        // but above intended maximum, slow to increase by 25%\n        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));\n        return (_currentSegment = Arrays.copyOf(curr, newLen));\n    }",
    "fixed_code": "    public char[] expandCurrentSegment()\n    {\n        final char[] curr = _currentSegment;\n        // Let's grow by 50% by default\n        final int len = curr.length;\n        int newLen = len + (len >> 1);\n        // but above intended maximum, slow to increase by 25%\n        if (newLen > MAX_SEGMENT_LEN) {\n            newLen = len + (len >> 2);\n        }\n        return (_currentSegment = Arrays.copyOf(curr, newLen));\n    }",
    "fixed_lines": "        int newLen = len + (len >> 1);\n        if (newLen > MAX_SEGMENT_LEN) {\n            newLen = len + (len >> 2);\n        }",
    "masked_code": "    public char[] expandCurrentSegment()\n    {\n        final char[] curr = _currentSegment;\n        // Let's grow by 50% by default\n        final int len = curr.length;\n        // but above intended maximum, slow to increase by 25%\n>>> [ INFILL ] <<<\n        return (_currentSegment = Arrays.copyOf(curr, newLen));\n    }",
    "project": "JacksonCore",
    "test_error_message": "junit.framework.AssertionFailedError: Expected buffer of 262145 to expand, did not, length now 262144",
    "test_framework": "defects4j",
    "test_line": "                  fail(\"Expected buffer of \"+old.length+\" to expand, did not, length now \"+buf.length);",
    "test_name": "testExpand",
    "test_suite": "com.fasterxml.jackson.core.util.TestTextBuffer",
    "time_buggy": "2014-09-24 20:07:10 -0700",
    "time_fixed": "2014-09-24 20:12:47 -0700"
}