{
    "bug_id": 7,
    "bug_type": "SF",
    "buggy_lines": "        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;",
    "code": "    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n          // Objects are restricted to \"Function\", subtypes are left\n          // Only filter out subtypes of \"function\"\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "fixed_code": "    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        if (resultEqualsValue) {\n          // Objects are restricted to \"Function\", subtypes are left\n          return ctorType.getGreatestSubtype(type);\n        } else {\n          // Only filter out subtypes of \"function\"\n          return type.isSubtype(ctorType) ? null : type;\n        }\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "fixed_lines": "        if (resultEqualsValue) {\n          return ctorType.getGreatestSubtype(type);\n        } else {\n          return type.isSubtype(ctorType) ? null : type;\n        }",
    "masked_code": "    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n          // Objects are restricted to \"Function\", subtypes are left\n          // Only filter out subtypes of \"function\"\n>>> [ INFILL ] <<<\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "project": "Closure",
    "test_error_message": "junit.framework.AssertionFailedError: Expected: (Object|boolean|number|string)",
    "test_framework": "defects4j",
    "test_line": "    Asserts.assertTypeEquals(",
    "test_name": "testGoogIsFunction2",
    "test_suite": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
    "time_buggy": "2012-10-16 22:17:22 +0000",
    "time_fixed": "2012-10-17 15:53:59 +0000"
}