{
    "bug_id": 3,
    "bug_type": "SH SF",
    "buggy_lines": "            return org.apache.commons.lang.math.NumberUtils.createNumber(str);",
    "code": "    public static Number createNumber(String str)\n    {\n        try\n        {\n            return org.apache.commons.lang.math.NumberUtils.createNumber(str);\n        }\n        catch (NumberFormatException nfe)\n        {\n            System.err.println(nfe.getMessage());\n        }\n\n        return null;\n    }",
    "fixed_code": "    public static Number createNumber(String str)\n    {\n        try\n        {\n            if( str != null )\n            {\n                if( str.indexOf('.') != -1 )\n                {\n                    return Double.valueOf(str);\n                }\n                else\n                {\n                    return Long.valueOf(str);\n                }\n            }\n        }\n        catch (NumberFormatException nfe)\n        {\n            System.err.println(nfe.getMessage());\n        }\n\n        return null;\n    }",
    "fixed_lines": "            if( str != null )\n            {\n                if( str.indexOf('.') != -1 )\n                {\n                    return Double.valueOf(str);\n                }\n                else\n                {\n                    return Long.valueOf(str);\n                }\n            }",
    "masked_code": "    public static Number createNumber(String str)\n    {\n        try\n        {\n>>> [ INFILL ] <<<\n        }\n        catch (NumberFormatException nfe)\n        {\n            System.err.println(nfe.getMessage());\n        }\n\n        return null;\n    }",
    "project": "Cli",
    "test_error_message": "junit.framework.AssertionFailedError: number flag n expected:<4.5> but was:<4.5>",
    "test_framework": "defects4j",
    "test_line": "           assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));",
    "test_name": "testSimplePattern",
    "test_suite": "org.apache.commons.cli.PatternOptionBuilderTest",
    "time_buggy": "2007-05-26 00:52:24 +0000",
    "time_fixed": "2007-05-28 07:54:52 +0000"
}