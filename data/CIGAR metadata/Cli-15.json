{
    "bug_id": 15,
    "bug_type": "SF",
    "buggy_lines": "        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }",
    "code": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        }\n\n        // augment the list with the default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n                // if there are more default values as specified, add them to\n                // the list.\n                    // copy the list first\n        \n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "fixed_code": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if (defaultValues == null || defaultValues.isEmpty()) {\n            defaultValues = (List) this.defaultValues.get(option);\n        }\n\n        // augment the list with the default values\n        if (defaultValues != null && !defaultValues.isEmpty()) {\n            if (valueList == null || valueList.isEmpty()) {\n                valueList = defaultValues;\n            } else {\n                // if there are more default values as specified, add them to\n                // the list.\n                if (defaultValues.size() > valueList.size()) {\n                    // copy the list first\n                    valueList = new ArrayList(valueList);\n                    for (int i=valueList.size(); i<defaultValues.size(); i++) {\n                        valueList.add(defaultValues.get(i));\n                    }\n                }\n            }\n        }\n        \n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "fixed_lines": "        if (defaultValues == null || defaultValues.isEmpty()) {\n            defaultValues = (List) this.defaultValues.get(option);\n        if (defaultValues != null && !defaultValues.isEmpty()) {\n            if (valueList == null || valueList.isEmpty()) {\n                valueList = defaultValues;\n            } else {\n                if (defaultValues.size() > valueList.size()) {\n                    valueList = new ArrayList(valueList);\n                    for (int i=valueList.size(); i<defaultValues.size(); i++) {\n                        valueList.add(defaultValues.get(i));\n                    }\n                }\n            }\n        }",
    "masked_code": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        }\n\n        // augment the list with the default values\n                // if there are more default values as specified, add them to\n                // the list.\n                    // copy the list first\n>>> [ INFILL ] <<<\n        \n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "project": "Cli",
    "test_error_message": "junit.framework.ComparisonFailure: expected:<[1[, 1000]]> but was:<[1[]]>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(\"[\" + enteredValue1 + \", 1000]\", b + \"\");",
    "test_name": "testSingleOptionSingleArgument",
    "test_suite": "org.apache.commons.cli2.bug.BugCLI158Test",
    "time_buggy": "2008-07-23 20:09:05 +0000",
    "time_fixed": "2008-07-24 19:38:04 +0000"
}