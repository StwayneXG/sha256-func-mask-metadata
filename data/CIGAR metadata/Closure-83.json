{
    "bug_id": 83,
    "bug_type": "SH SF",
    "buggy_lines": "        String param = params.getParameter(0);",
    "code": "      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = params.getParameter(0);\n\n        if (param == null) {\n          setter.addValue(true);\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            setter.addValue(true);\n            return 0;\n          }\n          return 1;\n        }\n      }",
    "fixed_code": "      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = null;\n        try {\n          param = params.getParameter(0);\n        } catch (CmdLineException e) {}\n\n        if (param == null) {\n          setter.addValue(true);\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            setter.addValue(true);\n            return 0;\n          }\n          return 1;\n        }\n      }",
    "fixed_lines": "        String param = null;\n        try {\n          param = params.getParameter(0);\n        } catch (CmdLineException e) {}",
    "masked_code": "      public int parseArguments(Parameters params) throws CmdLineException {\n>>> [ INFILL ] <<<\n\n        if (param == null) {\n          setter.addValue(true);\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            setter.addValue(true);\n            return 0;\n          }\n          return 1;\n        }\n      }",
    "project": "Closure",
    "test_error_message": "junit.framework.AssertionFailedError",
    "test_framework": "defects4j",
    "test_line": "    assertTrue(runner.shouldRunCompiler());",
    "test_name": "testVersionFlag2",
    "test_suite": "com.google.javascript.jscomp.CommandLineRunnerTest",
    "time_buggy": "2011-01-18 17:27:22 +0000",
    "time_fixed": "2011-01-18 18:02:32 +0000"
}