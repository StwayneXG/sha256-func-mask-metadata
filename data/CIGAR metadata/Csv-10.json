{
    "bug_id": 10,
    "bug_type": "SH SF",
    "buggy_lines": "",
    "code": "    public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {\n        Assertions.notNull(out, \"out\");\n        Assertions.notNull(format, \"format\");\n\n        this.out = out;\n        this.format = format;\n        this.format.validate();\n        // TODO: Is it a good idea to do this here instead of on the first call to a print method?\n        // It seems a pain to have to track whether the header has already been printed or not.\n    }",
    "fixed_code": "    public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {\n        Assertions.notNull(out, \"out\");\n        Assertions.notNull(format, \"format\");\n\n        this.out = out;\n        this.format = format;\n        this.format.validate();\n        // TODO: Is it a good idea to do this here instead of on the first call to a print method?\n        // It seems a pain to have to track whether the header has already been printed or not.\n        if (format.getHeader() != null) {\n            this.printRecord((Object[]) format.getHeader());\n        }\n    }",
    "fixed_lines": "        if (format.getHeader() != null) {\n            this.printRecord((Object[]) format.getHeader());\n        }",
    "masked_code": "    public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {\n        Assertions.notNull(out, \"out\");\n        Assertions.notNull(format, \"format\");\n\n        this.out = out;\n        this.format = format;\n        this.format.validate();\n        // TODO: Is it a good idea to do this here instead of on the first call to a print method?\n        // It seems a pain to have to track whether the header has already been printed or not.\n>>> [ INFILL ] <<<\n    }",
    "project": "Csv",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<[C1,C2,C3",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(\"C1,C2,C3\\r\\na,b,c\\r\\nx,y,z\\r\\n\", sw.toString());",
    "test_name": "testHeader",
    "test_suite": "org.apache.commons.csv.CSVPrinterTest",
    "time_buggy": "2014-06-02 18:04:49 +0000",
    "time_fixed": "2014-06-09 22:21:22 +0000"
}