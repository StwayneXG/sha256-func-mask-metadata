Old Method Name,New Method Name,Method Implementation
insertStartTag,func_91f33fb235cbaedc375a2464ff02de89b50962fa6cc41b1a4654cfb3db176768,"    Element insertStartTag(String startTagName) {
        Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);
        insert(el);
        return el;
    }"
isElementInQueue,func_72448470bfe977a9f66b57c35e518e5a915f8b1848f0888059c7d40f1550a801,"    private boolean isElementInQueue(ArrayList<Element> queue, Element element) {
        for (int pos = queue.size() -1; pos >= 0; pos--) {
            Element next = queue.get(pos);
            if (next == element) {
                return true;
            }
        }
        return false;
    }"
inSpecificScope,func_119a8aeb7a9d4484ef328c622fc097f5ef6c619cfbeb117d0cf39aa7366ff98a,"    private boolean inSpecificScope(String targetName, String[] baseTypes, String[] extraTypes) {
        specificScopeTarget[0] = targetName;
        return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);
    }"
removeFromActiveFormattingElements,func_8238842ff1240702ed5f0f1ecddf54cdb91926282d5a38abf54e46bce9eda53f,"    void removeFromActiveFormattingElements(Element el) {
        for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
            Element next = formattingElements.get(pos);
            if (next == el) {
                formattingElements.remove(pos);
                break;
            }
        }
    }"
clearStackToContext,func_5542da5a92698cf76c3476f31698e2d4c9f43ec40003286b0303e5e5a4227439,"    private void clearStackToContext(String... nodeNames) {
        for (int pos = stack.size() -1; pos >= 0; pos--) {
            Element next = stack.get(pos);
            if (StringUtil.in(next.nodeName(), nodeNames) || next.nodeName().equals(""html""))
                break;
            else
                stack.remove(pos);
        }
    }"
generateImpliedEndTags,func_a2a53555aefac38a38c99eca9e761e61c46fc7ad23582b7c0aadc92e3e235469,"    void generateImpliedEndTags(String excludeTag) {
        while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&
                inSorted(currentElement().nodeName(), TagSearchEndTags))
            pop();
    }"
resetInsertionMode,func_926b0d305b2f0505453505a117d81bd7e5fc80688c299591d90e68b3040e631e,"    void resetInsertionMode() {
        boolean last = false;
        for (int pos = stack.size() -1; pos >= 0; pos--) {
            Element node = stack.get(pos);
            if (pos == 0) {
                last = true;
                node = contextElement;
            }
            String name = node.nodeName();
            if (""select"".equals(name)) {
                transition(HtmlTreeBuilderState.InSelect);
                break; // frag
            } else if ((""td"".equals(name) || ""th"".equals(name) && !last)) {
                transition(HtmlTreeBuilderState.InCell);
                break;
            } else if (""tr"".equals(name)) {
                transition(HtmlTreeBuilderState.InRow);
                break;
            } else if (""tbody"".equals(name) || ""thead"".equals(name) || ""tfoot"".equals(name)) {
                transition(HtmlTreeBuilderState.InTableBody);
                break;
            } else if (""caption"".equals(name)) {
                transition(HtmlTreeBuilderState.InCaption);
                break;
            } else if (""colgroup"".equals(name)) {
                transition(HtmlTreeBuilderState.InColumnGroup);
                break; // frag
            } else if (""table"".equals(name)) {
                transition(HtmlTreeBuilderState.InTable);
                break;
            } else if (""head"".equals(name)) {
                transition(HtmlTreeBuilderState.InBody);
                break; // frag
            } else if (""body"".equals(name)) {
                transition(HtmlTreeBuilderState.InBody);
                break;
            } else if (""frameset"".equals(name)) {
                transition(HtmlTreeBuilderState.InFrameset);
                break; // frag
            } else if (""html"".equals(name)) {
                transition(HtmlTreeBuilderState.BeforeHead);
                break; // frag
            } else if (last) {
                transition(HtmlTreeBuilderState.InBody);
                break; // frag
            }
        }
    }"
popStackToClose,func_76d315e4eedc49229e9e25397e282ffb9008e97de832b8a974cd4d0217fb0372,"    void popStackToClose(String elName) {
        for (int pos = stack.size() -1; pos >= 0; pos--) {
            Element next = stack.get(pos);
            stack.remove(pos);
            if (next.nodeName().equals(elName))
                break;
        }
    }"
isSameFormattingElement,func_5c72705111dc866907ff90a70a8e6881e9d8a01dfbbc5e7777f92679d235187f,"    private boolean isSameFormattingElement(Element a, Element b) {
        // same if: same namespace, tag, and attributes. Element.equals only checks tag, might in future check children
        return a.nodeName().equals(b.nodeName()) &&
                // a.namespace().equals(b.namespace()) &&
                a.attributes().equals(b.attributes());
        // todo: namespaces
    }"
popStackToBefore,func_1f533577e516b8b32dfbef7aec30ca027a8a9f308e0930d9ceb0e6c9ac72def5,"    void popStackToBefore(String elName) {
        for (int pos = stack.size() -1; pos >= 0; pos--) {
            Element next = stack.get(pos);
            if (next.nodeName().equals(elName)) {
                break;
            } else {
                stack.remove(pos);
            }
        }
    }"
appendChild,func_9a6daac06719773ea6f2157184723b3b095e8c1b2b692b99d26a20e146fee42a,
exitTableBody,func_39703a0ca4cedd5edab8f8fb35fce113f750014514ae0ccbf024044ae0a67005,"        private boolean exitTableBody(Token t, HtmlTreeBuilder tb) {
            if (!(tb.inTableScope(""tbody"") || tb.inTableScope(""thead"") || tb.inScope(""tfoot""))) {
                // frag case
                tb.error(this);
                return false;
            }
            tb.clearStackToTableBodyContext();
            tb.processEndTag(tb.currentElement().nodeName());
            return tb.process(t);
        }"
closeCell,func_75d1f0f3c8fd4efcc6eafe738fcf3864ec3e8592af503de73d75c0ce9f59b574,"        private void closeCell(HtmlTreeBuilder tb) {
            if (tb.inTableScope(""td""))
                tb.processEndTag(""td"");
            else
                tb.processEndTag(""th""); // only here if th or td in scope
        }"
anythingElse,func_5fe684275a87e2d5d8cc308aa00e6e4ff75fa742d9e1df78fe8af3e1a7af2394,"        private boolean anythingElse(Token t, HtmlTreeBuilder tb) {
            tb.insertStartTag(""html"");
            tb.transition(BeforeHead);
            return tb.process(t);
        }"
handleMissingTr,func_097a1c16c02b74b4600eaf2078c3f2fe75d8763cf096ac28095725cb4a59b772,"        private boolean handleMissingTr(Token t, TreeBuilder tb) {
            boolean processed = tb.processEndTag(""tr"");
            if (processed)
                return tb.process(t);
            else
                return false;
        }"
