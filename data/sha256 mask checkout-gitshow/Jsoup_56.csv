Old Method Name,New Method Name,Method Implementation
outerHtmlHead,func_1738bb3ad04647644fb19d04d2556d08aa220ac233873e60390583ae4f6b3d2a,"    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
        if (out.syntax() == Syntax.html && !has(PUBLIC_ID) && !has(SYSTEM_ID)) {
            // looks like a html5 doctype, go lowercase for aesthetics
            accum.append(""<!doctype"");
        } else {
            accum.append(""<!DOCTYPE"");
        }
        if (has(NAME))
            accum.append("" "").append(attr(NAME));
        if (has(PUBLIC_ID))
            accum.append("" PUBLIC \"""").append(attr(PUBLIC_ID)).append('""');
        if (has(SYSTEM_ID))
            accum.append("" \"""").append(attr(SYSTEM_ID)).append('""');
        accum.append('>');
    }"
has,func_9150c74c5f92d51a92857f4b9678105ba5a676d308339a353b20bd38cd669ce7,
insert,func_1e22560cee2c4b727c6a117792e04a6769efbe2395f8e2528c603a153a446477,"    Element insert(Token.StartTag startTag) {
        Tag tag = Tag.valueOf(startTag.name(), settings);
        // todo: wonder if for xml parsing, should treat all tags as unknown? because it's not html.
        Element el = new Element(tag, baseUri, settings.normalizeAttributes(startTag.attributes));
        insertNode(el);
        if (startTag.isSelfClosing()) {
            tokeniser.acknowledgeSelfClosingFlag();
            if (!tag.isKnownTag()) // unknown tag, remember this is self closing for output. see above.
                tag.setSelfClosing();
        } else {
            stack.add(el);
        }
        return el;
    }"
